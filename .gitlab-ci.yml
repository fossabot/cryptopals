image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: git.lackstein.com/noah/cryptopals

stages:
    - test
    - deploy

format:
    stage: test
    before_script:
      # The problem is that to be able to use go get, one needs to put
      # the repository in the $GOPATH. So for example if your gitlab domain
      # is gitlab.com, and that your repository is namespace/project, and
      # the default GOPATH being /go, then you'd need to have your
      # repository in /go/src/gitlab.com/namespace/project
      # Thus, making a symbolic link corrects this.
      - mkdir -p $GOPATH/src/$REPO_NAME
      - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/$REPO_NAME
      - cd $GOPATH/src/$REPO_NAME
    script:
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test -race -v $(go list ./... | grep -v /vendor/)

push_to_github:
    stage: deploy
    only:
      - master
    before_script:
      # SSH setup so that we can push to Github
      - mkdir -p ~/.ssh
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -H 'github.com' >> ~/.ssh/known_hosts
    script:
      - cd $CI_PROJECT_DIR
      - git push -f git@github.com:lackstein/cryptopals.git master
